# Generated by Django 4.1.1 on 2022-11-13 16:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APIIDDictionary',
            fields=[
                ('playerID', models.IntegerField(primary_key=True, serialize=False)),
                ('fplID', models.IntegerField(verbose_name='FPL ID')),
                ('understatID', models.IntegerField(verbose_name='Understat ID')),
            ],
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('fixtureID', models.IntegerField(primary_key=True, serialize=False)),
                ('homeTeamStrength', models.IntegerField(verbose_name='Home Team Strength')),
                ('awayTeamStrength', models.IntegerField(verbose_name='Away Team Strength')),
                ('homeTeamGoals', models.IntegerField(verbose_name='Home Team Goals')),
                ('awayTeamGoals', models.IntegerField(verbose_name='Away Team Goals')),
            ],
        ),
        migrations.CreateModel(
            name='FPLAPIStatsGameweek',
            fields=[
                ('fpl_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='FPL ID')),
                ('fpl_player_name', models.CharField(max_length=100, verbose_name='Player Name')),
                ('fpl_minutes', models.IntegerField(default=0, verbose_name='Minutes')),
                ('fpl_assists', models.IntegerField(default=0, verbose_name='Assists')),
                ('fpl_goals', models.IntegerField(default=0, verbose_name='Goals')),
                ('fpl_clean_sheets', models.IntegerField(default=0, verbose_name='Clean Sheets')),
                ('fpl_goals_conceded', models.IntegerField(default=0, verbose_name='Goals Conceded')),
                ('fpl_total_points', models.IntegerField(default=0, verbose_name='Total Points')),
                ('fpl_team', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(21)], verbose_name='Team')),
                ('fpl_position', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Position')),
                ('fpl_cost', models.FloatField(verbose_name='Cost')),
                ('fpl_threat', models.FloatField(verbose_name='Threat')),
                ('fpl_influence', models.FloatField(verbose_name='Influence')),
                ('fpl_creativity', models.FloatField(verbose_name='Creativity')),
                ('fpl_ppg', models.FloatField(verbose_name='Points Per Game')),
            ],
        ),
        migrations.CreateModel(
            name='Gameweek',
            fields=[
                ('gameweekNumber', models.IntegerField(primary_key=True, serialize=False, verbose_name='Gameweek No.')),
                ('endDeadline', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('teamID', models.IntegerField(primary_key=True, serialize=False)),
                ('teamName', models.CharField(max_length=100)),
                ('leaguePos', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(21)], verbose_name='League Position')),
            ],
        ),
        migrations.CreateModel(
            name='UnderstatAPIStatsGameweek',
            fields=[
                ('understat_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Understat ID')),
                ('understat_npxg', models.FloatField(verbose_name='Non-penalty xG')),
                ('understat_xG', models.FloatField(verbose_name='xG')),
                ('understat_xA', models.FloatField(verbose_name='xA')),
                ('understat_key_passes', models.IntegerField(verbose_name='Key Passes')),
                ('understat_xG_chain', models.FloatField(verbose_name='xG Chain')),
                ('understat_xG_buildup', models.FloatField(verbose_name='xG Buildup')),
                ('understat_shots', models.IntegerField(verbose_name='Shots')),
                ('understat_yellow_cards', models.IntegerField(verbose_name='Yellow Cards')),
            ],
        ),
        migrations.CreateModel(
            name='XPGameweek',
            fields=[
                ('num', models.IntegerField(primary_key=True, serialize=False)),
                ('xP', models.FloatField(verbose_name='Expected Points')),
                ('formCoefficient', models.FloatField(verbose_name='Form coefficient')),
                ('gameweekNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webApp.gameweek', verbose_name='Gameweek')),
                ('playerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webApp.apiiddictionary', verbose_name='Player ID')),
            ],
        ),
        migrations.CreateModel(
            name='TeamFixture',
            fields=[
                ('num', models.IntegerField(primary_key=True, serialize=False)),
                ('fixtureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webApp.fixture', verbose_name='Fixture ID')),
                ('teamID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webApp.team', verbose_name='Team ID')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTeam',
            fields=[
                ('num', models.IntegerField(primary_key=True, serialize=False)),
                ('playerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webApp.apiiddictionary', verbose_name='Player ID')),
                ('teamID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webApp.team', verbose_name='Team ID')),
            ],
        ),
        migrations.AddField(
            model_name='fixture',
            name='awayTeamID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awayTeamID', to='webApp.team', verbose_name='Away Team ID'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='gameweekNumber',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webApp.gameweek', verbose_name='Gameweek'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='homeTeamID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeTeamID', to='webApp.team', verbose_name='Home Team ID'),
        ),
    ]
